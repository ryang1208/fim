<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.quantdo.iwin.mapper.IWinProductMapper">
	
	<select id="findiwinProductByRule" parameterType="map" resultType="com.quantdo.iwin.entity.iWinProduct" >
		select 
		p.id as id,
		p.product_name as productName,
		p.product_code as productCode,
		p.product_short_name as productShortName,
		p.product_discription as productDiscription,
		p.product_status as productStatus,
		p.currency as currency,
		p.net_value as netValue,
		p.profit_ratio as profitRatio,
		p.sharp_rate as sharpRate,
		p.risk_return_ratio as riskReturnRatio,
		p.max_drawdown as maxDrawdown,
		p.average_drawdown as averageDrawdown,
		p.annual_return as annualReturn,
		p.create_date as createDate,
		p.type_management as typeManagement,
		p.trustee_name as trusteeName,
		p.is_grading as isGrading,
		p.leverage_ratio as leverageRatio,
		p.initial_asset as initialAsset,
		p.duration_month as durationMonth,
		p.open_date_describe as openDateDescribe,
		p.subscription_start as subscriptionStart,
		p.addition_start as additionStart,
		p.subscription_fee as subscriptionFee,
		p.redemption_fee as redemptionFee,
		
		p.future_strategy_list as futureStrategyList,
		p.securities_strategy_list as securitiesStrategyList,
		p.other_strategy_list as otherStrategyList,
		p.strategy_list as strategyList,
		
		p.warning_line as warningLine,
		p.stop_loss_line as stopLossLine,
		p.performance_reward as performanceReward,
		p.management_fee_rate as managementFeeRate,
		p.trust_fee_rate as trustFeeRate,
		p.adviser_fee_rate as adviserFeeRate,
		p.outsource_fee_rate as outsourceFeeRate,
		p.fund_manager as fundManager,
		p.fund_trustee as fundTrustee,
		p.outsourcing_company as outsourcingCompany,
		p.fund_unit as fundUnit,
		p.is_structure as isStructure,
		p.product_type as productType,
		p.product_manager as productManager,
		p.is_independent as isIndependent,
		p.investment_id as investmentID,
		p.product_netChart as productNetChart,
		p.portfolio_fund as portfolioFund,
		p.trustee as trustee,
		p.investment_closure_period as investmentClosurePeriod,
		p.recruitment_scale as recruitmentScale,
		p.scope_of_investment as scopeOfInvestment,
		p.subscription_amount as subscriptionAmount,
		p.net_release_frequency as netReleaseFrequency,
		p.monthly_yield as monthlyYield,
		p.average_earnings_cycle as averageEarningsCycle,
		p.average_loss_cycle as averageLossPeriod,
		CASE WHEN f.login_id IS NULL THEN '0' ELSE '1' END AS isConcentration ,
		p.is_calculate_netValue isCalculateNetValue,
		p.settlement_date settlementDate
		from 
		t_product p 
		LEFT JOIN t_user_product_follow f ON p.id = f.product_id 
		AND f.login_id = #{loginID,jdbcType=VARCHAR} 
		where p.is_parent_product='0' and p.product_status !='3' 
		<if test="productQueryRequest != null">
			<if test="productQueryRequest.productName != null and productQueryRequest.productName != ''">
				AND p.product_name like CONCAT('%',#{productQueryRequest.productName,jdbcType=VARCHAR}, '%') 
			</if>
			<if test="productQueryRequest.portfolioFund != null and productQueryRequest.portfolioFund != ''">
				AND p.id IN(SELECT product_id 
					FROM t_products_relationship 
					WHERE parent_product_id IN (SELECT id 
						FROM t_product 
						WHERE product_name LIKE CONCAT('%',#{productQueryRequest.portfolioFund,jdbcType=VARCHAR}, '%')
						)
					)
			</if>
			<if test="productQueryRequest.investmentID != null and productQueryRequest.investmentID != ''">
				AND p.investment_id = #{productQueryRequest.investmentID,jdbcType=VARCHAR} 
			</if>
			<if test="productQueryRequest.fundManager != null and productQueryRequest.fundManager != ''">
				AND p.fund_manager = #{productQueryRequest.fundManager,jdbcType=VARCHAR} 
			</if>
			<if test="productQueryRequest.isIndependent != null and productQueryRequest.isIndependent != ''">
				AND p.is_independent = #{productQueryRequest.isIndependent,jdbcType=VARCHAR} 
			</if>
			<if test="productQueryRequest.initialAssetList != null and productQueryRequest.initialAssetList.size() != 0">
				AND 
				<foreach open="(" separator=" or " close=")" item="item" index="index" collection="productQueryRequest.initialAssetList">
					<if test="item.begin != null">
						(p.initial_asset &gt;=#{item.begin} ) 
					</if>
					<if test="item.end != null">
						AND (p.initial_asset &lt;#{item.end})
					</if>
				</foreach>
			</if>
			<!-- 产品状态 -->
			<if test="productQueryRequest.ProductStatusList != null and productQueryRequest.ProductStatusList.size() != 0">
				AND
				<foreach open="(" separator=" or " close=")" item="item" index="index" collection="productQueryRequest.ProductStatusList">
					(CONCAT(',',CONCAT_WS(',',p.product_status),',') like CONCAT("%,",#{item},",%")) 
				</foreach>
			</if>
			<!-- 策略  -->	
			<if test="productQueryRequest.strategyAllList != null and productQueryRequest.strategyAllList.size() != 0">
				AND
				<foreach open="(" separator=" or " close=")" item="item" index="index" collection="productQueryRequest.strategyAllList">
					(p.strategy_list like CONCAT(#{item}) or p.strategy_list like CONCAT(#{item}, ",%") or 
					   p.strategy_list like CONCAT("%,", #{item}) or p.strategy_list like CONCAT("%,", #{item}, ",%")) 
				</foreach>
			</if>
			<if test="productQueryRequest.investmentIdList != null and productQueryRequest.investmentIdList.size() != 0">
				AND p.investment_id in
				<foreach item="item" index="index" collection="productQueryRequest.investmentIdList" open="(" separator="," close=")">  
					#{item} 
				</foreach> 
			</if>
			<!-- 产品类型-->
			<if test="productQueryRequest.productTypeList != null and productQueryRequest.productTypeList.size() != 0">
				AND
				<foreach open="(" separator=" or " close=")" item="item" index="index" collection="productQueryRequest.productTypeList">
					(CONCAT(',',CONCAT_WS(',',p.product_type),',') like CONCAT("%,",#{item},",%")) 
				</foreach>
			</if>
		</if>
	</select>
	
	
	<select id="findByPortfolioFund" parameterType="map" resultType="com.quantdo.iwin.entity.iWinProduct" >
		select 
		p.id as id,
		p.product_name as productName,
		p.product_code as productCode,
		p.product_short_name as productShortName,
		p.product_discription as productDiscription,
		p.product_status as productStatus,
		p.currency as currency,
		p.net_value as netValue,
		k.net_newest_value as netNewValue,
		p.profit_ratio as profitRatio,
		p.sharp_rate as sharpRate,
		p.risk_return_ratio as riskReturnRatio,
		p.max_drawdown as maxDrawdown,
		p.average_drawdown as averageDrawdown,
		p.annual_return as annualReturn,
		p.create_date as createDate,
		p.type_management as typeManagement,
		p.trustee_name as trusteeName,
		p.is_grading as isGrading,
		p.leverage_ratio as leverageRatio,
		p.initial_asset as initialAsset,
		p.duration_month as durationMonth,
		p.open_date_describe as openDate,
		p.subscription_start as subscriptionStart,
		p.addition_start as additionStart,
		p.subscription_fee as subscriptionFee,
		p.redemption_fee as redemptionFee,
		p.future_strategy_list as futureStrategyList,
		p.securities_strategy_list as securitiesStrategyList,
		p.other_strategy_list as otherStrategyList,
		p.warning_line as warningLine,
		p.stop_loss_line as stopLossLine,
		p.performance_reward as performanceReward,
		p.management_fee_rate as managementFeeRate,
		p.trust_fee_rate as trustFeeRate,
		p.adviser_fee_rate as adviserFeeRate,
		p.outsource_fee_rate as outsourceFeeRate,
		p.fund_manager as fundManager,
		p.fund_trustee as fundTrustee,
		p.outsourcing_company as outsourcingCompany,
		p.fund_unit as fundUnit,
		p.is_structure as isStructure,
		p.product_type as productType,
		p.product_manager as productManager,
		p.is_independent as isIndependent,
		p.investment_id as investmentID,
		p.product_netChart as productNetChart,
		p.portfolio_fund as portfolioFund,
		p.trustee as trustee,
		p.investment_closure_period as investmentClosurePeriod,
		p.recruitment_scale as recruitmentScale,
		p.scope_of_investment as scopeOfInvestment,
		p.subscription_amount as subscriptionAmount,
		p.net_release_frequency as netReleaseFrequency,
		p.monthly_yield as monthlyYield,
		p.average_earnings_cycle as averageEarningsCycle,
		p.average_loss_cycle as averageLossPeriod,
		m.company_name as investmentNamem,
		p.settlement_date settlementDate
		from 
		t_product p 
		left join t_investment_manager m on p.investment_id = m.id 
		left join t_product_daily_kpi_statistics k on k.product_id = p.id and k.date=(select MAX(s.date) from t_product_daily_kpi_statistics s where p.id=s.product_id) 
		where p.is_parent_product='0' and p.product_status !='3' 
		<if test="portfolioFund != null">
			AND p.portfolio_fund = #{portfolioFund,jdbcType=VARCHAR} 
		</if>
	</select>
	
	<select id="findBySubProductID" parameterType="map" resultType="com.quantdo.iwin.entity.iWinProduct" >
		select 
		p.id as id,
		p.product_name as productName,
		p.product_code as productCode,
		p.product_short_name as productShortName,
		p.product_discription as productDiscription,
		p.product_status as productStatus,
		p.currency as currency,
		p.net_value as netValue,
		k.net_accumulative_value as netAccumulativeValue,
		p.profit_ratio as profitRatio,
		p.sharp_rate as sharpRate,
		p.risk_return_ratio as riskReturnRatio,
		p.max_drawdown as maxDrawdown,
		p.average_drawdown as averageDrawdown,
		p.annual_return as annualReturn,
		p.create_date as createDate,
		p.type_management as typeManagement,
		p.trustee_name as trusteeName,
		p.is_grading as isGrading,
		p.leverage_ratio as leverageRatio,
		p.initial_asset as initialAsset,
		p.duration_month as durationMonth,
		p.open_date_describe as openDate,
		p.subscription_start as subscriptionStart,
		p.addition_start as additionStart,
		p.subscription_fee as subscriptionFee,
		p.redemption_fee as redemptionFee,
		
		
		p.future_strategy_list as futureStrategyList,
		p.securities_strategy_list as securitiesStrategyList,
		p.other_strategy_list as otherStrategyList,
		p.strategy_list as strategyList,
		
		p.warning_line as warningLine,
		p.stop_loss_line as stopLossLine,
		p.performance_reward as performanceReward,
		p.management_fee_rate as managementFeeRate,
		p.trust_fee_rate as trustFeeRate,
		p.adviser_fee_rate as adviserFeeRate,
		p.outsource_fee_rate as outsourceFeeRate,
		p.fund_manager as fundManager,
		p.fund_trustee as fundTrustee,
		p.outsourcing_company as outsourcingCompany,
		p.fund_unit as fundUnit,
		p.is_structure as isStructure,
		p.product_type as productType,
		p.product_manager as productManager,
		p.is_independent as isIndependent,
		p.investment_id as investmentID,
		p.product_netChart as productNetChart,
		p.portfolio_fund as portfolioFund,
		p.trustee as trustee,
		p.investment_closure_period as investmentClosurePeriod,
		p.recruitment_scale as recruitmentScale,
		p.scope_of_investment as scopeOfInvestment,
		p.subscription_amount as subscriptionAmount,
		p.net_release_frequency as netReleaseFrequency,
		p.monthly_yield as monthlyYield,
		p.average_earnings_cycle as averageEarningsCycle,
		p.average_loss_cycle as averageLossPeriod,
		m.company_name as investmentName,
		p.settlement_date settlementDate
		from 
		t_product p 
		left join t_investment_manager m on p.investment_id = m.id 
		left join t_product_daily_kpi_statistics k on k.product_id = p.id and k.date=(select MAX(s.date) from t_product_daily_kpi_statistics s where p.id=s.product_id) 
		where p.is_parent_product='0' and p.product_status !='3' 
		<if test="productsRelationshipList != null and productsRelationshipList.size() != 0 ">
			AND p.id in 
			<foreach item="item" index="index" collection="productsRelationshipList" open="(" separator="," close=")">  
				#{item.productID} 
			</foreach>
		</if>

	</select>
</mapper>